stages:
  - ðŸ‘®quality
  - ðŸ‘·build
  - ðŸš€deploy-nzc
  - ðŸš€deploy-client

################################################################
# 0) QUALITY                                                   #
################################################################

.quality: &quality
  stage: ðŸ‘®quality
  before_script:
    - export NVM_DIR="$HOME/.nvm"
    - if [ -s "$NVM_DIR/nvm.sh" ]; then source "$NVM_DIR/nvm.sh"; fi
    - nvm install
    - nvm use
    - yarn
  tags:
    - mac-home
  allow_failure: false
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^develop$/'

typescript:
  <<: *quality
  script:
    - yarn tsc

prettier:
  <<: *quality
  script:
    - yarn prettier

eslint:
  <<: *quality
  script:
    - yarn lint

jest:
  <<: *quality
  script:
    - yarn test --coverage

################################################################
# 1) BUILD                                                     #
################################################################
# Template
.buildAndroid: &buildAndroid
  stage: ðŸ‘·build
  before_script:
    - export LANG=en_US.UTF-8
    - export LC_ALL=en_US.UTF-8
    - cat $ENV_FILE > .env.${BUILD_ENV}
    - export NVM_DIR="$HOME/.nvm"
    - if [ -s "$NVM_DIR/nvm.sh" ]; then source "$NVM_DIR/nvm.sh"; fi
    - nvm install
    - nvm use
    - export PATH=$PATH:/usr/local/bin
    - yarn --version 
    - export PATH="$HOME/.rbenv/shims:$HOME/.rbenv/bin:$PATH"
    - eval "$(rbenv init -)" 
    - bundle --version
    - export PATH="$HOME/.jabba/jabba/bin:$PATH"
    - jabba --version
    - yarn
    - jabba use
    - cd ci/
    - curl --silent "https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer" | bash
    - bundle install
    - export ANDROID_HOME="$HOME/Library/Android/sdk"
    - export PATH="$ANDROID_HOME/emulator:$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin:$ANDROID_HOME/platform-tools:$PATH"
  tags:
    - mac-home
  script:
    - bundle exec fastlane android build --env ${BUILD_ENV}
  allow_failure: true
  artifacts:
    paths:
      - android/app/build/outputs/apk/${BUILD_ENV}
    expire_in: 2 weeks

.buildiOS: &buildiOS
  stage: ðŸ‘·build
  before_script:
    - export LANG=en_US.UTF-8
    - export LC_ALL=en_US.UTF-8
    - cat $ENV_FILE > .env.${BUILD_ENV}
    - export NVM_DIR="$HOME/.nvm"
    - if [ -s "$NVM_DIR/nvm.sh" ]; then source "$NVM_DIR/nvm.sh"; fi
    - nvm install
    - nvm use
    - export PATH=$PATH:/usr/local/bin
    - yarn --version 
    - export PATH="$HOME/.rbenv/shims:$HOME/.rbenv/bin:$PATH"
    - eval "$(rbenv init -)" 
    - bundle --version
    - yarn
    - cd ci/
    - curl --silent "https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer" | bash
    - bundle install
    - bundle exec "cd ../ios && pod install --repo-update"
  tags:
    - mac-home
  script:
    - bundle exec fastlane ios build --env ${BUILD_ENV}
  allow_failure: true
  artifacts:
    paths:
      - ios/build/ipa/
    expire_in: 2 weeks

# Jobs
ðŸ› build:ios:dev:
  <<: *buildiOS
  variables:
    BUILD_ENV: dev
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
    - if: $CI_COMMIT_BRANCH =~ /^release.*$/
    - if: $CI_COMMIT_BRANCH =~ /^hotfix.*$/
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^develop$/'

ðŸ› build:ios:production:
  <<: *buildiOS
  variables:
    BUILD_ENV: production
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^release.*$/
    - if: $CI_COMMIT_BRANCH =~ /^hotfix.*$/

ðŸ› build:android:dev:
  <<: *buildAndroid
  variables:
    BUILD_ENV: dev
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
    - if: $CI_COMMIT_BRANCH =~ /^release.*$/
    - if: $CI_COMMIT_BRANCH =~ /^hotfix.*$/
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^develop$/'

ðŸ› build:android:production:
  <<: *buildAndroid
  variables:
    BUILD_ENV: production
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^release.*$/
    - if: $CI_COMMIT_BRANCH =~ /^hotfix.*$/

################################################################
# 2) DEPLOY NZC                                               #
################################################################

# Templates
.deploy: &deploy
  before_script:
    - export LANG=en_US.UTF-8
    - export LC_ALL=en_US.UTF-8
    - export PATH="$HOME/.rbenv/shims:$HOME/.rbenv/bin:$PATH"
    - eval "$(rbenv init -)" 
    - cd ci/
    - bundle install
    - curl --silent "https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer" | bash
  script:
    - bundle exec fastlane ${BUILD_PLATFORM} deploy_to_store store:${DEPLOY_STORE} --env ${BUILD_ENV}
  tags:
    - mac-home

# Jobs
ðŸš€deploy-nzc:ios:dev:
  <<: *deploy
  stage: ðŸš€deploy-nzc
  variables:
    BUILD_PLATFORM: ios
    BUILD_ENV: dev
    DEPLOY_STORE: nzc
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
    - if: $CI_COMMIT_BRANCH =~ /^release.*$/
    - if: $CI_COMMIT_BRANCH =~ /^hotfix.*$/
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^develop$/'
  dependencies:
    - ðŸ› build:ios:dev

ðŸš€deploy-nzc:android:dev:
  <<: *deploy
  stage: ðŸš€deploy-nzc
  variables:
    BUILD_PLATFORM: android
    BUILD_ENV: dev
    DEPLOY_STORE: nzc
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
    - if: $CI_COMMIT_BRANCH =~ /^release.*$/
    - if: $CI_COMMIT_BRANCH =~ /^hotfix.*$/
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^develop$/'
  dependencies:
    - ðŸ› build:android:dev

################################################################
# 3) DEPLOY CLIENT                                             #
################################################################

ðŸš€deploy-client:ios:dev:
  <<: *deploy
  stage: ðŸš€deploy-client
  variables:
    BUILD_PLATFORM: ios
    BUILD_ENV: dev
    DEPLOY_STORE: nzc
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^release.*$/
    - if: $CI_COMMIT_BRANCH =~ /^hotfix.*$/
  dependencies:
    - ðŸ› build:ios:dev

ðŸš€deploy-client:android:dev:
  <<: *deploy
  stage: ðŸš€deploy-client
  variables:
    BUILD_PLATFORM: android
    BUILD_ENV: dev
    DEPLOY_STORE: privateClient
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^release.*$/
    - if: $CI_COMMIT_BRANCH =~ /^hotfix.*$/
  dependencies:
    - ðŸ› build:android:dev
  when: manual

ðŸš€deploy-client:ios:production:
  <<: *deploy
  stage: ðŸš€deploy-client
  variables:
    BUILD_PLATFORM: ios
    BUILD_ENV: production
    DEPLOY_STORE: nzc
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^release.*$/
    - if: $CI_COMMIT_BRANCH =~ /^hotfix.*$/
  dependencies:
    - ðŸ› build:ios:dev

ðŸš€deploy-client:android:production:
  <<: *deploy
  stage: ðŸš€deploy-client
  variables:
    BUILD_PLATFORM: android
    BUILD_ENV: production
    DEPLOY_STORE: privateClient
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^release.*$/
    - if: $CI_COMMIT_BRANCH =~ /^hotfix.*$/
  dependencies:
    - ðŸ› build:android:production
  when: manual
